---
- name: Update apt package cache
  apt:
    update_cache: true

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /home/kube-user/kube-deps
    state: directory
    mode: '0755'

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Download ContainerD
  ansible.builtin.get_url:
    url: https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz
    checksum: "sha256:https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz.sha256sum"
    dest: /home/kube-user/kube-deps/containerd-{{ containerd_version }}-linux-amd64.tar.gz

- name: Extract ContainerD
  ansible.builtin.unarchive:
    remote_src: true
    src: /home/kube-user/kube-deps/containerd-{{ containerd_version }}-linux-amd64.tar.gz
    dest: /usr/local

- name: Create systemd unit
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/containerd/containerd/v{{ containerd_version }}/containerd.service
    dest: /lib/systemd/system/containerd.service

- name: Systemd reload
  ansible.builtin.systemd:
    daemon_reload: true

- name: Systemd start ContainerD
  ansible.builtin.systemd:
    name: containerd
    enabled: true
    state: started

- name: Download RunC
  ansible.builtin.get_url:
    url: https://github.com/opencontainers/runc/releases/download/{{ runc_version }}/runc.amd64
    checksum: "sha256:https://github.com/opencontainers/runc/releases/download/{{ runc_version }}/runc.sha256sum"
    dest: /home/kube-user/kube-deps/runc.amd64

- name: Install RunC
  ansible.builtin.command: install -m 755 /home/kube-user/kube-deps/runc.amd64 /usr/local/sbin/runc

- name: Install a list of packages
  ansible.builtin.apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gpg

- name: Creates directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: 755

- name: Download signing key
  ansible.builtin.shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ kube_minor_release }}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Update Kube-repo
  ansible.builtin.shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ kube_minor_release }}/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

- name: Install a list of packages
  ansible.builtin.apt:
    update_cache: true
    pkg:
    - kubeadm={{ kube_full_release }}
    - kubelet={{ kube_full_release }}

- name: Dump containerd config
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml

- name: Add cgroup driver for containerd
  ansible.builtin.shell: |
    cat <<EOF | sudo tee -a /etc/containerd/config.toml
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
    SystemdCgroup = true
    EOF

- name: Uncomment disabled CRI plugins
  ansible.builtin.command: sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml

- name: Restart containerd
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    enabled: true

- name: Initialize Kubernetes master
  command: kubeadm init --pod-network-cidr={{ overlay_cidr }} --skip-phases=addon/kube-proxy
  args:
    creates: /etc/kubernetes/admin.conf
  become_user: root